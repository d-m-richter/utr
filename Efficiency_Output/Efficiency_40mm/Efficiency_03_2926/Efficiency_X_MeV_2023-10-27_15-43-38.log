utrwrapper.py> Started processing extended macro file '/nfs/ldas02/zh02/home/drichter/utr/macros/examples/utrwrapper-efficiency-jonny.xmac' at 2023-10-27 15-43-38
utrwrapper.py> Contents of extended macro file '/nfs/ldas02/zh02/home/drichter/utr/macros/examples/utrwrapper-efficiency-jonny.xmac':
Dump of utrwrapper-efficiency-jonny.xmac> #!/usr/bin/env utrwrapper.py
Dump of utrwrapper-efficiency-jonny.xmac> ## An (utrwrapper.py) extended macro starts with a configuration header embedded in comment lines (preceded by a single '#')
Dump of utrwrapper-efficiency-jonny.xmac> ## For real comment lines in the header use multiple '#'s
Dump of utrwrapper-efficiency-jonny.xmac> ## Run utrwrapper.py -h for a list of all available configuration options and their effects
Dump of utrwrapper-efficiency-jonny.xmac> 
Dump of utrwrapper-efficiency-jonny.xmac> ## This macro is an example of using utrwrapper.py to prepare utr for and execute an efficiency simulation looping over the source energy
Dump of utrwrapper-efficiency-jonny.xmac> 
Dump of utrwrapper-efficiency-jonny.xmac> #[generalConfig]
Dump of utrwrapper-efficiency-jonny.xmac> #outputDir=output/Efficiency_03_2926
Dump of utrwrapper-efficiency-jonny.xmac> 
Dump of utrwrapper-efficiency-jonny.xmac> #[environmentVariables]
Dump of utrwrapper-efficiency-jonny.xmac> #filenamePrefix=Efficiency_
Dump of utrwrapper-efficiency-jonny.xmac> #filenameSuffix=_MeV
Dump of utrwrapper-efficiency-jonny.xmac> #filenameTemplate={filenamePrefix}{loopVar}{filenameSuffix}
Dump of utrwrapper-efficiency-jonny.xmac> #setterCmd=/gps/ene/mono {loopVar} MeV
Dump of utrwrapper-efficiency-jonny.xmac> 
Dump of utrwrapper-efficiency-jonny.xmac> #[utrBuildOptions]
Dump of utrwrapper-efficiency-jonny.xmac> #CAMPAIGN=Others
Dump of utrwrapper-efficiency-jonny.xmac> #DETECTOR_CONSTRUCTION=Efficiency
Dump of utrwrapper-efficiency-jonny.xmac> #USE_TARGETS=OFF
Dump of utrwrapper-efficiency-jonny.xmac> #GENERATOR_ANGCORR=OFF
Dump of utrwrapper-efficiency-jonny.xmac> #GENERATOR_ANGDIST=OFF
Dump of utrwrapper-efficiency-jonny.xmac> #EVENT_EDEP=ON 
Dump of utrwrapper-efficiency-jonny.xmac> #EVENT_EKIN=OFF
Dump of utrwrapper-efficiency-jonny.xmac> #EVENT_EVENTWISE=OFF
Dump of utrwrapper-efficiency-jonny.xmac> 
Dump of utrwrapper-efficiency-jonny.xmac> #[getHistogramArgs]
Dump of utrwrapper-efficiency-jonny.xmac> #quantity=edep
Dump of utrwrapper-efficiency-jonny.xmac> #maxenergy=10
Dump of utrwrapper-efficiency-jonny.xmac> #maxid=0
Dump of utrwrapper-efficiency-jonny.xmac> 
Dump of utrwrapper-efficiency-jonny.xmac> #[histogramToTxtArgs]
Dump of utrwrapper-efficiency-jonny.xmac> #end=0
Dump of utrwrapper-efficiency-jonny.xmac> 
Dump of utrwrapper-efficiency-jonny.xmac> ## The required magic string signals the end of the configuration header
Dump of utrwrapper-efficiency-jonny.xmac> #START_OF_MACRO
Dump of utrwrapper-efficiency-jonny.xmac> 
Dump of utrwrapper-efficiency-jonny.xmac> # Never simulate more than 2^32= 4294967296 particles using /run/beamOn, since this causes an overflow in the random number seed, giving you in principle the same results over and over again.
Dump of utrwrapper-efficiency-jonny.xmac> # In such cases execute the same simulation multiple times instead.
Dump of utrwrapper-efficiency-jonny.xmac> /control/alias beamOnStatistics 43246211 # 10000000
Dump of utrwrapper-efficiency-jonny.xmac> 
Dump of utrwrapper-efficiency-jonny.xmac> # Get the filenamePrefix and filenameSuffix variables defined in the configuration header as GEANT4 aliases
Dump of utrwrapper-efficiency-jonny.xmac> /control/getEnv filenamePrefix
Dump of utrwrapper-efficiency-jonny.xmac> /control/getEnv filenameSuffix
Dump of utrwrapper-efficiency-jonny.xmac> 
Dump of utrwrapper-efficiency-jonny.xmac> # Disable appendage of additional IDs to filenames (as unique filenames containing the simulated energy will be used for each beamOn)
Dump of utrwrapper-efficiency-jonny.xmac> /utr/setUseFilenameID False
Dump of utrwrapper-efficiency-jonny.xmac> # Set the number of required decimal places for padding of loopVar
Dump of utrwrapper-efficiency-jonny.xmac> /control/alias appendZerosToVarPadding 2
Dump of utrwrapper-efficiency-jonny.xmac> 
Dump of utrwrapper-efficiency-jonny.xmac> 
Dump of utrwrapper-efficiency-jonny.xmac> # Do the usual initialization steps for an efficiency simulation
Dump of utrwrapper-efficiency-jonny.xmac> /run/initialize
Dump of utrwrapper-efficiency-jonny.xmac> 
Dump of utrwrapper-efficiency-jonny.xmac> /gps/particle gamma
Dump of utrwrapper-efficiency-jonny.xmac> /gps/pos/type Point
Dump of utrwrapper-efficiency-jonny.xmac> /gps/ang/type iso
Dump of utrwrapper-efficiency-jonny.xmac> /gps/ene/type Gauss
Dump of utrwrapper-efficiency-jonny.xmac> 
Dump of utrwrapper-efficiency-jonny.xmac> /gps/pos/confine Plastikzylinder
Dump of utrwrapper-efficiency-jonny.xmac> /gps/pos/centre 0. 0. --47.41983090190567 mm #-12. mm
Dump of utrwrapper-efficiency-jonny.xmac> 
Dump of utrwrapper-efficiency-jonny.xmac> # Run the generic macro in a loop
Dump of utrwrapper-efficiency-jonny.xmac> # loop Syntax: /control/loop MacroFile Variable Start End Increment
Dump of utrwrapper-efficiency-jonny.xmac> # for each Syntax: /control/foreach MacroFile Variable ValueList
Dump of utrwrapper-efficiency-jonny.xmac> # To use the variable in the macro to be looped refer to it wrapped in {} as {Variable} in the macro
Dump of utrwrapper-efficiency-jonny.xmac> # Remember that due to the numerical inaccuracies when adding float numbers, a loop might generate a run more or less than expected!
Dump of utrwrapper-efficiency-jonny.xmac> /control/foreach macros/examples/genericLoopable.mac loopVar 0.661657 #0.5 1. 2. 3. 4. 5. 
Dump of utrwrapper-efficiency-jonny.xmac> #/control/loop macros/examples/genericLoopable.mac loopVar 10. 15. 2.5
utrwrapper.py> End of extended macro file '/nfs/ldas02/zh02/home/drichter/utr/macros/examples/utrwrapper-efficiency-jonny.xmac'
utrwrapper.py> Contents of referred macro file 'macros/examples/genericLoopable.mac':
Dump of genericLoopable.mac> # A very minimal and generic macro to be used with /control/loop or /control/foreach commands in other macros.
Dump of genericLoopable.mac> # Using environment variables which can be easily set with the utrwrapper, this macro can be used for virtually
Dump of genericLoopable.mac> # any type of simulation (efficiency and angular distribution), by packing the relevant commands and variables
Dump of genericLoopable.mac> # in a environment variable, whose alias values are resolved when /control/getEnv is used.
Dump of genericLoopable.mac> # Without using environment variables one can still achieve most of the functionality but with each possibility
Dump of genericLoopable.mac> # hard-coded in strdoif statements or by forgoing additional parameters, see below for three possible implementations
Dump of genericLoopable.mac> 
Dump of genericLoopable.mac> # Execute a very generic setter command (stored in an environment variable e.g. $setterCmd=/gps/ene/mono {loopVar} MeV
Dump of genericLoopable.mac> # This is however a bit buggy and requires a meaningless '/control/alias loopVar {loopVar}' to get rid of an "Alias <loopVar> not found -- command ignored" message
Dump of genericLoopable.mac> /control/alias loopVar {loopVar}
Dump of genericLoopable.mac> /control/getEnv setterCmd
Dump of genericLoopable.mac> {setterCmd}
Dump of genericLoopable.mac> 
Dump of genericLoopable.mac> ## Execute a very generic setter command, but without the possibility of other parameters (like MeV unit)
Dump of genericLoopable.mac> ## (Note that /gps/ene/mono uses keV as the default unit when the unit is not specified)
Dump of genericLoopable.mac> #{setterCmd} {loopVar}
Dump of genericLoopable.mac> 
Dump of genericLoopable.mac> ## Execute only known commands in a rather explicit way (does not warn about unknown commands however!)
Dump of genericLoopable.mac> #/control/strdoif {setterCmd} == /ang/delta23 /ang/delta23 {loopVar}
Dump of genericLoopable.mac> #/control/strdoif {setterCmd} == /gps/ene/mono /gps/ene/mono {loopVar} MeV
Dump of genericLoopable.mac> 
Dump of genericLoopable.mac> 
Dump of genericLoopable.mac> # Set the output filename to contain the simulated energy in an uniform number format
Dump of genericLoopable.mac> /utr/appendZerosToVar loopVar {loopVar} {appendZerosToVarPadding}
Dump of genericLoopable.mac> /control/getEnv filenameTemplate
Dump of genericLoopable.mac> /utr/setFilename {filenameTemplate}
Dump of genericLoopable.mac> 
Dump of genericLoopable.mac> ## Example of an alternative way to set the output filename not using environment variables:
Dump of genericLoopable.mac> ## For this to work, however, all GEANT4 aliases must still be defined (e.g. just set filenameSuffix=NOTUSED)
Dump of genericLoopable.mac> #/control/strdoif {filenameStyle} == full /utr/setFilename {filenamePrefix}{loopVar}{filenameSuffix}
Dump of genericLoopable.mac> #/control/strdoif {filenameStyle} == noSuffix /utr/setFilename {filenamePrefix}{loopVar}
Dump of genericLoopable.mac> 
Dump of genericLoopable.mac> # Never simulate more than 2^32= 4294967296 particles using /run/beamOn, since this causes an overflow in the random number seed, giving you in principle the same results over and over again.
Dump of genericLoopable.mac> # In such cases execute the same simulation multiple times instead.
Dump of genericLoopable.mac> /run/beamOn {beamOnStatistics}
utrwrapper.py> End of referred macro file 'macros/examples/genericLoopable.mac'
utrwrapper.py> Running cmake on utr  at 2023-10-27 15-43-38 (current runtime: 0h 00m 00s)
cmake on utr> -- Configuring done
cmake on utr> -- Generating done
cmake on utr> -- Build files have been written to: /home/drichter/utr/build
utrwrapper.py> Running buildsystem on utr  at 2023-10-27 15-43-38 (current runtime: 0h 00m 00s)
buildsystem on utr> Consolidate compiler generated dependencies of target utr
buildsystem on utr> [  2%] Building CXX object CMakeFiles/utr.dir/DetectorConstruction/Others/Efficiency/DetectorConstruction.cc.o
buildsystem on utr> /home/drichter/utr/DetectorConstruction/Others/Efficiency/DetectorConstruction.cc: In member function ‘virtual G4VPhysicalVolume* DetectorConstruction::Construct()’:
buildsystem on utr> /home/drichter/utr/DetectorConstruction/Others/Efficiency/DetectorConstruction.cc:232:41: error: lvalue required as decrement operand
buildsystem on utr>   232 |   G4double plastikzylinder_position = --47.41983090190567 * mm;
buildsystem on utr>       |                                         ^~~~~~~~~~~~~~~~~
buildsystem on utr> gmake[2]: *** [CMakeFiles/utr.dir/build.make:90: CMakeFiles/utr.dir/DetectorConstruction/Others/Efficiency/DetectorConstruction.cc.o] Error 1
buildsystem on utr> gmake[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/utr.dir/all] Error 2
buildsystem on utr> gmake: *** [Makefile:136: all] Error 2
ERROR: buildsystem on utr failed! Aborting...
